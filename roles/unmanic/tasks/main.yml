---
- name: Start Unmanic
  block:
    - name: Create Unmanic Directories
      ansible.builtin.file:
        path: "{{ item }}"
        state: directory
      with_items:
        - "{{ unmanic_data_directory }}"
        - "{{ fasttemp_root }}/unmanic/cache"

    - name: Unmanic
      community.docker.docker_container:
        name: "{{ unmanic_container_name }}"
        image: "{{ unmanic_image_name }}:{{ unmanic_image_version }}"
        pull: true
        volumes:
          - "{{ unmanic_data_directory }}:/config:rw"
          - "{{ unmanic_tv_directory }}:/library/tv:rw"
          - "{{ unmanic_movies_directory }}:/library/movies:rw"
          - "{{ fasttemp_root }}/unmanic/cache:/tmp/unmanic:rw"
        ports:
          - "{{ unmanic_port }}:8888"
        env:
          TZ: "{{ ansible_nas_timezone }}"
          PUID: "{{ unmanic_user_id }}"
          PGID: "{{ unmanic_group_id }}"
          NVIDIA_VISIBLE_DEVICES: "all"
        runtime: "nvidia"
        restart_policy: unless-stopped
        memory: "{{ unmanic_memory }}"
        labels:
          traefik.http.routers.unmanic.rule: "Host(`{{ unmanic_hostname }}.{{ ansible_nas_domain }}`)"
          traefik.http.routers.unmanic.tls.certresolver: "letsencrypt"
          traefik.http.routers.unmanic.tls.domains[0].main: "{{ ansible_nas_domain }}"
          traefik.http.routers.unmanic.tls.domains[0].sans: "*.{{ ansible_nas_domain }}"
          traefik.http.routers.unmanic.middlewares: "unmanicwhitelist"
          traefik.http.services.unmanic.loadbalancer.server.port: "8888"
          traefik.http.middlewares.unmanicwhitelist.ipwhitelist.sourcerange: "{{ private_whitelist }}"
  when: unmanic_enabled is true

- name: Stop Unmanic
  block:
    - name: Stop Unmanic
      community.docker.docker_container:
        name: "{{ unmanic_container_name }}"
        state: absent
  when: unmanic_enabled is false
